apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongo
  labels:
    name: mongo
    app: demo-voting-app
spec:
  serviceName: mongo
  replicas: 1
  selector:
    matchLabels:
      name: mongo
      app: demo-voting-app
  template:
    metadata:
      labels:
        name: mongo
        app: demo-voting-app
    spec:
      containers:
        - name: mongo
          image: mongo:5.0
          ports:
            - containerPort: 27017
          volumeMounts:
            - name: mongo-data
              mountPath: /data/db
          command:
            - mongod
            - "--replSet"
            - "rs0"
            - "--bind_ip_all"
            - "--noauth"  # Disable authentication
          readinessProbe:
            exec:
              command:
                - mongo
                - --eval
                - "print('waiting for db to be ready')"
            initialDelaySeconds: 10
            periodSeconds: 5
          livenessProbe:
            exec:
              command:
                - mongo
                - --eval
                - "print('waiting for db to be alive')"
            initialDelaySeconds: 30
            periodSeconds: 10
          resources:
            requests:
              memory: "512Mi"
              cpu: "500m"
            limits:
              memory: "1Gi"
              cpu: "1"

        # Sidecar container to initialize the replica set
        - name: rs-init
          image: mongo:5.0
          command:
            - bash
            - "-c"
            - |
              # Check if replica set is already initialized
              if ! mongo --host localhost:27017 --eval "rs.status()" | grep -q '"ok" : 1'; then
                # Wait for MongoDB to be ready
                until mongo --host localhost:27017 --eval "rs.status()"; do
                  echo "Waiting for MongoDB replica set to be ready..."
                  sleep 2
                done
              else
                echo "Replica set already initialized."
              fi

              exit 0
          readinessProbe:
            exec:
              command:
                - "mongo"
                - "--host"
                - "localhost:27017"
                - "--eval"
                - "rs.status()"
            initialDelaySeconds: 10
            periodSeconds: 5
            failureThreshold: 3

          livenessProbe:
            exec:
              command:
                - "mongo"
                - "--host"
                - "localhost:27017"
                - "--eval"
                - "rs.status()"
            initialDelaySeconds: 20
            periodSeconds: 5
            failureThreshold: 3

          resources:
            requests:
              memory: "128Mi"
              cpu: "100m"
            limits:
              memory: "256Mi"
              cpu: "500m"

      volumes:
        - name: mongo-data
          persistentVolumeClaim:
            claimName: mongo-data-pvc

  volumeClaimTemplates:
    - metadata:
        name: mongo-data
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 10Gi
